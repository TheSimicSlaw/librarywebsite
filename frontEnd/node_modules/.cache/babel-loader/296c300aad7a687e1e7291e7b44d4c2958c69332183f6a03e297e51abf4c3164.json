{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryana\\\\OneDrive\\\\School 2023-2024\\\\Spring Semester\\\\COSC 3380 Database Systems\\\\librarywebsite\\\\frontEnd\\\\src\\\\SignInPage.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { Link, useNavigate } from 'react-router-dom';\n// import './signIn.css'; // Make sure the CSS file is correctly linked\n\n// function SignInPage() {\n//   const [StudentID, setStudentID] = useState('');\n//   const [ContactNumber, setContactNumber] = useState('');\n//   const [errorMessage, setErrorMessage] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleSignIn = async (e) => {\n//     e.preventDefault();\n\n//     if (!StudentID || !ContactNumber) {\n//       setErrorMessage('Please enter both Student ID and password');\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch('/api/authenticate', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ StudentID, ContactNumber }),\n//       });\n\n//       if (!response.ok) {\n//         throw new Error('Authentication failed');\n//       }\n\n//       navigate('/studentHomePage');\n//     } catch (error) {\n//       console.error('Error:', error);\n//       setErrorMessage('Failed to authenticate. Please check your Student ID and password.');\n//     }\n\n//     // Reset the form fields\n//     setStudentID('');\n//     setContactNumber('');\n//   };\n\n//   return (\n//     <div className=\"signInWrapper\">\n//       <h1 className=\"header\">Student Login</h1>\n//       <div className=\"signInContainer\">\n//         <h2 className=\"title\">Sign In</h2>\n//         {errorMessage && <p className=\"error\">{errorMessage}</p>}\n//         <form onSubmit={handleSignIn} className=\"signInForm\">\n//           <div className=\"inputGroup\">\n//             <label className=\"inFormText\" htmlFor=\"StudentID\">Usernam</label>\n//             <input\n//               type=\"text\"\n//               id=\"StudentID\"\n//               value={StudentID}\n//               onChange={(e) => setStudentID(e.target.value)}\n//             />\n//           </div>\n//           <div className=\"inputGroup\">\n//             <label className=\"inFormText\" htmlFor=\"ContactNumber\">Password</label>\n//             <input\n//               type=\"password\"\n//               id=\"ContactNumber\"\n//               value={ContactNumber}\n//               onChange={(e) => setContactNumber(e.target.value)}\n//             />\n//           </div>\n//           <button type=\"submit\" className=\"signIn\">Sign In</button>\n//           <Link to=\"/profSignIn\" className=\"profSignIn\">Professor Sign in</Link>\n//           <Link to=\"/libSignIn\" className=\"libSignIn\">Librarian Sign in</Link>\n//           <Link to=\"/adminSignIn\" className=\"adminSignIn\">Admin Sign in</Link>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default SignInPage;\n\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport './signIn.css'; // Make sure the CSS file is correctly linked\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignInPage() {\n  _s();\n  const [StudentID, setStudentID] = useState('');\n  const [ContactNumber, setContactNumber] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigate = useNavigate();\n  const handleSignIn = async e => {\n    e.preventDefault();\n    if (!StudentID || !ContactNumber) {\n      setErrorMessage('Please enter both Student ID and password');\n      return;\n    }\n\n    // Dummy username-password pairs\n    const dummyUsers = {\n      user1: 'password1',\n      user2: 'password2',\n      user3: 'password3'\n    };\n\n    // Check if the provided username exists in the dummy users\n    if (dummyUsers.hasOwnProperty(StudentID)) {\n      // Check if the provided password matches the stored password\n      if (ContactNumber === dummyUsers[StudentID]) {\n        // Passwords match, authentication successful\n        navigate('/studenthomepage');\n        return;\n      }\n    }\n\n    // If username or password is incorrect, show error message\n    setErrorMessage('Invalid username or password');\n\n    // Reset the form fields\n    setStudentID('');\n    setContactNumber('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signInWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"header\",\n      children: \"Student Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signInContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSignIn,\n        className: \"signInForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputGroup\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"inFormText\",\n            htmlFor: \"StudentID\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"StudentID\",\n            value: StudentID,\n            onChange: e => setStudentID(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputGroup\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"inFormText\",\n            htmlFor: \"ContactNumber\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"ContactNumber\",\n            value: ContactNumber,\n            onChange: e => setContactNumber(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"signIn\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/profSignIn\",\n          className: \"profSignIn\",\n          children: \"Professor Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/libSignIn\",\n          className: \"libSignIn\",\n          children: \"Librarian Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/adminSignIn\",\n          className: \"adminSignIn\",\n          children: \"Admin Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n}\n_s(SignInPage, \"aVFM7QkSf4ygWaI+k49Wo5s/XJY=\", false, function () {\n  return [useNavigate];\n});\n_c = SignInPage;\nexport default SignInPage;\nvar _c;\n$RefreshReg$(_c, \"SignInPage\");","map":{"version":3,"names":["React","useState","Link","useNavigate","jsxDEV","_jsxDEV","SignInPage","_s","StudentID","setStudentID","ContactNumber","setContactNumber","errorMessage","setErrorMessage","navigate","handleSignIn","e","preventDefault","dummyUsers","user1","user2","user3","hasOwnProperty","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","to","_c","$RefreshReg$"],"sources":["C:/Users/ryana/OneDrive/School 2023-2024/Spring Semester/COSC 3380 Database Systems/librarywebsite/frontEnd/src/SignInPage.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { Link, useNavigate } from 'react-router-dom';\n// import './signIn.css'; // Make sure the CSS file is correctly linked\n\n// function SignInPage() {\n//   const [StudentID, setStudentID] = useState('');\n//   const [ContactNumber, setContactNumber] = useState('');\n//   const [errorMessage, setErrorMessage] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleSignIn = async (e) => {\n//     e.preventDefault();\n\n//     if (!StudentID || !ContactNumber) {\n//       setErrorMessage('Please enter both Student ID and password');\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch('/api/authenticate', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ StudentID, ContactNumber }),\n//       });\n\n//       if (!response.ok) {\n//         throw new Error('Authentication failed');\n//       }\n\n//       navigate('/studentHomePage');\n//     } catch (error) {\n//       console.error('Error:', error);\n//       setErrorMessage('Failed to authenticate. Please check your Student ID and password.');\n//     }\n\n//     // Reset the form fields\n//     setStudentID('');\n//     setContactNumber('');\n//   };\n\n//   return (\n//     <div className=\"signInWrapper\">\n//       <h1 className=\"header\">Student Login</h1>\n//       <div className=\"signInContainer\">\n//         <h2 className=\"title\">Sign In</h2>\n//         {errorMessage && <p className=\"error\">{errorMessage}</p>}\n//         <form onSubmit={handleSignIn} className=\"signInForm\">\n//           <div className=\"inputGroup\">\n//             <label className=\"inFormText\" htmlFor=\"StudentID\">Usernam</label>\n//             <input\n//               type=\"text\"\n//               id=\"StudentID\"\n//               value={StudentID}\n//               onChange={(e) => setStudentID(e.target.value)}\n//             />\n//           </div>\n//           <div className=\"inputGroup\">\n//             <label className=\"inFormText\" htmlFor=\"ContactNumber\">Password</label>\n//             <input\n//               type=\"password\"\n//               id=\"ContactNumber\"\n//               value={ContactNumber}\n//               onChange={(e) => setContactNumber(e.target.value)}\n//             />\n//           </div>\n//           <button type=\"submit\" className=\"signIn\">Sign In</button>\n//           <Link to=\"/profSignIn\" className=\"profSignIn\">Professor Sign in</Link>\n//           <Link to=\"/libSignIn\" className=\"libSignIn\">Librarian Sign in</Link>\n//           <Link to=\"/adminSignIn\" className=\"adminSignIn\">Admin Sign in</Link>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default SignInPage;\n\n\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport './signIn.css'; // Make sure the CSS file is correctly linked\n\nfunction SignInPage() {\n  const [StudentID, setStudentID] = useState('');\n  const [ContactNumber, setContactNumber] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigate = useNavigate();\n\n  const handleSignIn = async (e) => {\n    e.preventDefault();\n\n    if (!StudentID || !ContactNumber) {\n      setErrorMessage('Please enter both Student ID and password');\n      return;\n    }\n\n    // Dummy username-password pairs\n    const dummyUsers = {\n      user1: 'password1',\n      user2: 'password2',\n      user3: 'password3'\n    };\n\n    // Check if the provided username exists in the dummy users\n    if (dummyUsers.hasOwnProperty(StudentID)) {\n      // Check if the provided password matches the stored password\n      if (ContactNumber === dummyUsers[StudentID]) {\n        // Passwords match, authentication successful\n        navigate('/studenthomepage');\n        return;\n      }\n    }\n\n    // If username or password is incorrect, show error message\n    setErrorMessage('Invalid username or password');\n\n    // Reset the form fields\n    setStudentID('');\n    setContactNumber('');\n  };\n\n  return (\n    <div className=\"signInWrapper\">\n      <h1 className=\"header\">Student Login</h1>\n      <div className=\"signInContainer\">\n        <h2 className=\"title\">Sign In</h2>\n        {errorMessage && <p className=\"error\">{errorMessage}</p>}\n        <form onSubmit={handleSignIn} className=\"signInForm\">\n          <div className=\"inputGroup\">\n            <label className=\"inFormText\" htmlFor=\"StudentID\">Username</label>\n            <input\n              type=\"text\"\n              id=\"StudentID\"\n              value={StudentID}\n              onChange={(e) => setStudentID(e.target.value)}\n            />\n          </div>\n          <div className=\"inputGroup\">\n            <label className=\"inFormText\" htmlFor=\"ContactNumber\">Password</label>\n            <input\n              type=\"password\"\n              id=\"ContactNumber\"\n              value={ContactNumber}\n              onChange={(e) => setContactNumber(e.target.value)}\n            />\n          </div>\n          <button type=\"submit\" className=\"signIn\">Sign In</button>\n          <Link to=\"/profSignIn\" className=\"profSignIn\">Professor Sign in</Link>\n          <Link to=\"/libSignIn\" className=\"libSignIn\">Librarian Sign in</Link>\n          <Link to=\"/adminSignIn\" className=\"adminSignIn\">Admin Sign in</Link>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default SignInPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}